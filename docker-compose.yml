version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: numcheck
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  gateway:
    build:
      context: .
      dockerfile: services/gateway/Dockerfile
    ports:
      - "127.0.0.1:11800:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/numcheck
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
      - S3_BUCKET=numcheck-exports
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - JWT_SECRET=dev_jwt_secret_change_in_production
      - API_KEY_PEPPER=dev_api_pepper_change_in_production
      - NUMCHECK_API_KEY=${NUMCHECK_API_KEY}
      - USE_WA_STAGE1=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./services/gateway:/app
      - /app/node_modules

  worker-wa:
    build:
      context: .
      dockerfile: services/worker-wa/Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/numcheck
      - REDIS_URL=redis://redis:6379
      - NUMCHECK_API_KEY=${NUMCHECK_API_KEY}
      - USE_WA_STAGE1=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/worker-wa:/app
      - /app/node_modules

  worker-tg:
    build:
      context: .
      dockerfile: services/worker-tg/Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/numcheck
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/worker-tg:/app
      - /app/node_modules

  aggregator:
    build:
      context: .
      dockerfile: services/aggregator/Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/numcheck
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
      - S3_BUCKET=numcheck-exports
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./services/aggregator:/app
      - /app/node_modules

  web-user:
    build:
      context: .
      dockerfile: apps/web-user/Dockerfile
    ports:
      - "127.0.0.1:18001:3001"
    environment:
      - REACT_APP_API_URL=http://127.0.0.1:11800
    volumes:
      - ./apps/web-user:/app
      - /app/node_modules

  web-admin:
    build:
      context: .
      dockerfile: apps/web-admin/Dockerfile
    ports:
      - "127.0.0.1:11802:3002"
    environment:
      - REACT_APP_API_URL=http://127.0.0.1:11800
    depends_on:
      - gateway
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./apps/web-admin:/app
      - /app/node_modules

volumes:
  postgres_data:
  redis_data:
  minio_data:
